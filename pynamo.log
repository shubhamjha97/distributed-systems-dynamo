2022-12-10 19:11:03,282|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,283|DEBUG  |       timer.py| 41|Start timer 4415959680 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,283|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,283|DEBUG  |       timer.py| 41|Start timer 4415959872 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,283|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,283|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,283|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,283|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,283|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,283|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,283|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,283|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,283|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,283|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,283|DEBUG  |       timer.py| 55|Cancel timer 4415959584 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,283|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,283|DEBUG  |       timer.py| 55|Cancel timer 4415959680 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 55|Cancel timer 4415959872 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 67|Pop timer 4415959344 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,284|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,284|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 41|Start timer 4415960256 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py|100|Start of schedule: 1 (limit 542) pending messages, 7 (limit 28472) pending timers
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 41|Start timer 4415960448 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 41|Start timer 4415960544 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 41|Start timer 4415960736 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,284|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 55|Cancel timer 4415960448 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 55|Cancel timer 4415960544 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,284|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,284|DEBUG  |       timer.py| 55|Cancel timer 4415960736 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 67|Pop timer 4415960256 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,285|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,285|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 41|Start timer 4415961120 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py|100|Start of schedule: 1 (limit 535) pending messages, 7 (limit 28471) pending timers
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,285|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,285|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 41|Start timer 4415961360 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 41|Start timer 4415961456 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 41|Start timer 4415961648 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,285|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 55|Cancel timer 4415961360 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 55|Cancel timer 4415961456 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,285|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,285|DEBUG  |       timer.py| 55|Cancel timer 4415961648 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 67|Pop timer 4415961120 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,286|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,286|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 41|Start timer 4415962032 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py|100|Start of schedule: 1 (limit 527) pending messages, 7 (limit 28470) pending timers
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,286|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,286|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 41|Start timer 4415962272 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 41|Start timer 4415962368 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 41|Start timer 4415962560 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,286|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 55|Cancel timer 4415962272 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,286|DEBUG  |       timer.py| 55|Cancel timer 4415962368 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,286|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 55|Cancel timer 4415962560 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 67|Pop timer 4415962032 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,287|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,287|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 41|Start timer 4415962944 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py|100|Start of schedule: 1 (limit 519) pending messages, 7 (limit 28469) pending timers
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,287|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,287|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 41|Start timer 4415987824 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 41|Start timer 4415987920 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 41|Start timer 4415988112 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,287|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 55|Cancel timer 4415987824 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,287|DEBUG  |       timer.py| 55|Cancel timer 4415987920 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,287|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 55|Cancel timer 4415988112 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 67|Pop timer 4415962944 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,288|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,288|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 41|Start timer 4415988496 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py|100|Start of schedule: 1 (limit 511) pending messages, 7 (limit 28468) pending timers
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,288|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,288|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 41|Start timer 4415988736 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 41|Start timer 4415988832 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 41|Start timer 4415989024 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,288|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 55|Cancel timer 4415988736 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 55|Cancel timer 4415988832 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,288|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,288|DEBUG  |       timer.py| 55|Cancel timer 4415989024 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 67|Pop timer 4415988496 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,289|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,289|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 41|Start timer 4415989408 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py|100|Start of schedule: 1 (limit 503) pending messages, 7 (limit 28467) pending timers
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,289|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,289|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 41|Start timer 4415989648 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 41|Start timer 4415989744 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 41|Start timer 4415989936 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,289|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 55|Cancel timer 4415989648 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 55|Cancel timer 4415989744 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,289|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,289|DEBUG  |       timer.py| 55|Cancel timer 4415989936 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 67|Pop timer 4415989408 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,290|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,290|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 41|Start timer 4415990320 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py|100|Start of schedule: 1 (limit 495) pending messages, 7 (limit 28466) pending timers
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,290|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,290|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 41|Start timer 4415990560 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 41|Start timer 4415990656 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 41|Start timer 4415990848 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,290|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 55|Cancel timer 4415990560 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 55|Cancel timer 4415990656 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,290|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,290|DEBUG  |       timer.py| 55|Cancel timer 4415990848 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 67|Pop timer 4415990320 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,291|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,291|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 41|Start timer 4415991232 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py|100|Start of schedule: 1 (limit 487) pending messages, 7 (limit 28465) pending timers
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,291|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,291|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 41|Start timer 4415991472 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 41|Start timer 4415991568 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 41|Start timer 4416004208 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,291|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 55|Cancel timer 4415991472 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 55|Cancel timer 4415991568 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,291|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,291|DEBUG  |       timer.py| 55|Cancel timer 4416004208 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 67|Pop timer 4415991232 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,292|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,292|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 41|Start timer 4416004496 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py|100|Start of schedule: 1 (limit 479) pending messages, 7 (limit 28464) pending timers
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,292|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,292|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 41|Start timer 4416004736 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 41|Start timer 4416004832 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 41|Start timer 4416005024 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,292|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 55|Cancel timer 4416004736 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 55|Cancel timer 4416004832 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 55|Cancel timer 4416005024 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,292|DEBUG  |       timer.py| 67|Pop timer 4416004496 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,293|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,293|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 41|Start timer 4416005408 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py|100|Start of schedule: 1 (limit 471) pending messages, 7 (limit 28463) pending timers
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 41|Start timer 4416005600 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 41|Start timer 4416005696 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 41|Start timer 4416005888 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 55|Cancel timer 4416005600 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 55|Cancel timer 4416005696 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,293|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 55|Cancel timer 4416005888 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,293|DEBUG  |       timer.py| 67|Pop timer 4416005408 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,293|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,293|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,293|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 41|Start timer 4416006272 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py|100|Start of schedule: 1 (limit 464) pending messages, 7 (limit 28462) pending timers
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,294|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,294|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 41|Start timer 4416006512 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 41|Start timer 4416006608 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 41|Start timer 4416006800 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 55|Cancel timer 4416006512 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 55|Cancel timer 4416006608 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,294|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 55|Cancel timer 4416006800 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,294|DEBUG  |       timer.py| 67|Pop timer 4416006272 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,294|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,294|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,294|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 41|Start timer 4416007184 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py|100|Start of schedule: 1 (limit 456) pending messages, 7 (limit 28461) pending timers
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 41|Start timer 4416007376 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 41|Start timer 4416007472 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 41|Start timer 4416007664 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 55|Cancel timer 4416007376 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 55|Cancel timer 4416007472 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 55|Cancel timer 4416007664 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 67|Pop timer 4416007184 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,295|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,295|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,295|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,295|DEBUG  |       timer.py| 41|Start timer 4416008048 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,295|INFO   |   framework.py|100|Start of schedule: 1 (limit 449) pending messages, 7 (limit 28460) pending timers
2022-12-10 19:11:03,295|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,295|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,296|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,296|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,296|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,296|DEBUG  |       timer.py| 41|Start timer 4416020640 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,296|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,296|DEBUG  |       timer.py| 41|Start timer 4416020736 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,296|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,296|DEBUG  |       timer.py| 41|Start timer 4416020928 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,296|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,296|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,296|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,296|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,296|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,296|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,296|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,296|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,296|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,296|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 55|Cancel timer 4416020640 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 55|Cancel timer 4416020736 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 55|Cancel timer 4416020928 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 67|Pop timer 4416008048 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,297|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,297|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 41|Start timer 4416021312 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py|100|Start of schedule: 1 (limit 441) pending messages, 7 (limit 28459) pending timers
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 41|Start timer 4416021504 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 41|Start timer 4416021600 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 41|Start timer 4416021792 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,297|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 55|Cancel timer 4416021504 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,297|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,297|DEBUG  |       timer.py| 55|Cancel timer 4416021600 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 55|Cancel timer 4416021792 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 67|Pop timer 4416021312 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,298|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,298|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 41|Start timer 4416022176 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py|100|Start of schedule: 1 (limit 434) pending messages, 7 (limit 28458) pending timers
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 41|Start timer 4416022368 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 41|Start timer 4416022464 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 41|Start timer 4416022656 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,298|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 55|Cancel timer 4416022368 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 55|Cancel timer 4416022464 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,298|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 55|Cancel timer 4416022656 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,298|DEBUG  |       timer.py| 67|Pop timer 4416022176 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,298|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,299|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 41|Start timer 4416023040 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py|100|Start of schedule: 1 (limit 427) pending messages, 7 (limit 28457) pending timers
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 41|Start timer 4416023232 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 41|Start timer 4416023328 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 41|Start timer 4416023520 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 55|Cancel timer 4416023232 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 55|Cancel timer 4416023328 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,299|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 55|Cancel timer 4416023520 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 67|Pop timer 4416023040 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,299|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,299|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,299|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,299|DEBUG  |       timer.py| 41|Start timer 4416023904 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py|100|Start of schedule: 1 (limit 420) pending messages, 7 (limit 28456) pending timers
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 41|Start timer 4416024096 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 41|Start timer 4416024192 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 41|Start timer 4416024384 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 55|Cancel timer 4416024096 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 55|Cancel timer 4416024192 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 55|Cancel timer 4416024384 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 67|Pop timer 4416023904 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,300|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,300|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 41|Start timer 4416041216 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py|100|Start of schedule: 1 (limit 413) pending messages, 7 (limit 28455) pending timers
2022-12-10 19:11:03,300|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,300|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,300|DEBUG  |       timer.py| 41|Start timer 4416041408 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 41|Start timer 4416041504 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 41|Start timer 4416041696 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 55|Cancel timer 4416041408 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 55|Cancel timer 4416041504 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 55|Cancel timer 4416041696 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 67|Pop timer 4416041216 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,301|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,301|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 41|Start timer 4416042080 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py|100|Start of schedule: 1 (limit 406) pending messages, 7 (limit 28454) pending timers
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,301|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,301|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,301|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,301|DEBUG  |       timer.py| 41|Start timer 4416042320 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 41|Start timer 4416042416 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 41|Start timer 4416042608 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 55|Cancel timer 4416042320 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 55|Cancel timer 4416042416 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 55|Cancel timer 4416042608 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 67|Pop timer 4416042080 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,302|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,302|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 41|Start timer 4416042992 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py|100|Start of schedule: 1 (limit 398) pending messages, 7 (limit 28453) pending timers
2022-12-10 19:11:03,302|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 41|Start timer 4416043184 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,302|DEBUG  |       timer.py| 41|Start timer 4416043280 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,302|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 41|Start timer 4416043472 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 55|Cancel timer 4416043184 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 55|Cancel timer 4416043280 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 55|Cancel timer 4416043472 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 67|Pop timer 4416042992 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,303|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,303|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 41|Start timer 4416043856 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py|100|Start of schedule: 1 (limit 391) pending messages, 7 (limit 28452) pending timers
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 41|Start timer 4416044048 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 41|Start timer 4416044144 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,303|DEBUG  |       timer.py| 41|Start timer 4416044336 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,303|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 55|Cancel timer 4416044048 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 55|Cancel timer 4416044144 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 55|Cancel timer 4416044336 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 67|Pop timer 4416043856 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,304|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,304|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 41|Start timer 4416044720 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py|100|Start of schedule: 1 (limit 384) pending messages, 7 (limit 28451) pending timers
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,304|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,304|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 41|Start timer 4416044960 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 41|Start timer 4416069696 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,304|DEBUG  |       timer.py| 41|Start timer 4416069888 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,304|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,304|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 55|Cancel timer 4416044960 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 55|Cancel timer 4416069696 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 55|Cancel timer 4416069888 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 67|Pop timer 4416044720 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,305|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,305|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 41|Start timer 4416070272 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py|100|Start of schedule: 1 (limit 376) pending messages, 7 (limit 28450) pending timers
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,305|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,305|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 41|Start timer 4416070512 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 41|Start timer 4416070608 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,305|DEBUG  |       timer.py| 41|Start timer 4416070800 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,305|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,305|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 55|Cancel timer 4416070512 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 55|Cancel timer 4416070608 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 55|Cancel timer 4416070800 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 67|Pop timer 4416070272 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,306|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,306|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 41|Start timer 4416071184 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py|100|Start of schedule: 1 (limit 368) pending messages, 7 (limit 28449) pending timers
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 41|Start timer 4416071376 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 41|Start timer 4416071472 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,306|DEBUG  |       timer.py| 41|Start timer 4416071664 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,306|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,306|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,306|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 55|Cancel timer 4416071376 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 55|Cancel timer 4416071472 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 55|Cancel timer 4416071664 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 67|Pop timer 4416071184 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,307|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,307|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 41|Start timer 4416072048 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py|100|Start of schedule: 1 (limit 361) pending messages, 7 (limit 28448) pending timers
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,307|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,307|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 41|Start timer 4416072288 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 41|Start timer 4416072384 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,307|DEBUG  |       timer.py| 41|Start timer 4416072576 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,307|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,307|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,307|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 55|Cancel timer 4416072288 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 55|Cancel timer 4416072384 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 55|Cancel timer 4416072576 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 67|Pop timer 4416072048 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,308|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,308|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 41|Start timer 4416072960 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py|100|Start of schedule: 1 (limit 353) pending messages, 7 (limit 28447) pending timers
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 41|Start timer 4416073152 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 41|Start timer 4416073248 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,308|DEBUG  |       timer.py| 41|Start timer 4416073440 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,308|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,308|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,308|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 55|Cancel timer 4416073152 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 55|Cancel timer 4416073248 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 55|Cancel timer 4416073440 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 67|Pop timer 4416072960 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,309|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,309|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 41|Start timer 4416086176 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py|100|Start of schedule: 1 (limit 346) pending messages, 7 (limit 28446) pending timers
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,309|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,309|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 41|Start timer 4416086416 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 41|Start timer 4416086512 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,309|DEBUG  |       timer.py| 41|Start timer 4416086704 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,309|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,309|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,309|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 55|Cancel timer 4416086416 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 55|Cancel timer 4416086512 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 55|Cancel timer 4416086704 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 67|Pop timer 4416086176 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,310|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,310|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 41|Start timer 4416087088 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py|100|Start of schedule: 1 (limit 338) pending messages, 7 (limit 28445) pending timers
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 41|Start timer 4416087280 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 41|Start timer 4416087376 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 41|Start timer 4416087568 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,310|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 55|Cancel timer 4416087280 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,310|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,310|DEBUG  |       timer.py| 55|Cancel timer 4416087376 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 55|Cancel timer 4416087568 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 67|Pop timer 4416087088 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,311|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,311|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 41|Start timer 4416087952 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py|100|Start of schedule: 1 (limit 331) pending messages, 7 (limit 28444) pending timers
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 41|Start timer 4416088144 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 41|Start timer 4416088240 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 41|Start timer 4416088432 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,311|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 55|Cancel timer 4416088144 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 55|Cancel timer 4416088240 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 55|Cancel timer 4416088432 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,311|DEBUG  |       timer.py| 67|Pop timer 4416087952 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,312|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,312|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 41|Start timer 4416088816 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py|100|Start of schedule: 1 (limit 324) pending messages, 7 (limit 28443) pending timers
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,312|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,312|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 41|Start timer 4416089056 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 41|Start timer 4416089152 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 41|Start timer 4416089344 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,312|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 55|Cancel timer 4416089056 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 55|Cancel timer 4416089152 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,312|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 55|Cancel timer 4416089344 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,312|DEBUG  |       timer.py| 67|Pop timer 4416088816 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,313|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,313|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 41|Start timer 4416089728 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py|100|Start of schedule: 1 (limit 316) pending messages, 7 (limit 28442) pending timers
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 41|Start timer 4416089920 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 41|Start timer 4416106560 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 41|Start timer 4416106656 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 55|Cancel timer 4416089920 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 55|Cancel timer 4416106560 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,313|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 55|Cancel timer 4416106656 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 67|Pop timer 4416089728 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,313|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,313|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,313|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,313|DEBUG  |       timer.py| 41|Start timer 4416107040 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py|100|Start of schedule: 1 (limit 309) pending messages, 7 (limit 28441) pending timers
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,314|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,314|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 41|Start timer 4416107280 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 41|Start timer 4416107376 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 41|Start timer 4416107568 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 55|Cancel timer 4416107280 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 55|Cancel timer 4416107376 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 55|Cancel timer 4416107568 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 67|Pop timer 4416107040 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,314|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,314|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,314|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,314|DEBUG  |       timer.py| 41|Start timer 4416107952 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,314|INFO   |   framework.py|100|Start of schedule: 1 (limit 301) pending messages, 7 (limit 28440) pending timers
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,315|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,315|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 41|Start timer 4416108192 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 41|Start timer 4416108288 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 41|Start timer 4416108480 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 55|Cancel timer 4416108192 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 55|Cancel timer 4416108288 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 55|Cancel timer 4416108480 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 67|Pop timer 4416107952 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,315|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,315|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,315|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,315|DEBUG  |       timer.py| 41|Start timer 4416108864 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,315|INFO   |   framework.py|100|Start of schedule: 1 (limit 293) pending messages, 7 (limit 28439) pending timers
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 41|Start timer 4416109056 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 41|Start timer 4416109152 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 41|Start timer 4416109344 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 55|Cancel timer 4416109056 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 55|Cancel timer 4416109152 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 55|Cancel timer 4416109344 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 67|Pop timer 4416108864 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,316|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,316|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 41|Start timer 4416109728 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py|100|Start of schedule: 1 (limit 286) pending messages, 7 (limit 28438) pending timers
2022-12-10 19:11:03,316|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,316|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,316|DEBUG  |       timer.py| 41|Start timer 4416109920 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 41|Start timer 4416110016 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 41|Start timer 4416110208 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 55|Cancel timer 4416109920 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 55|Cancel timer 4416110016 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 55|Cancel timer 4416110208 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 67|Pop timer 4416109728 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,317|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,317|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 41|Start timer 4416127040 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py|100|Start of schedule: 1 (limit 279) pending messages, 7 (limit 28437) pending timers
2022-12-10 19:11:03,317|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 41|Start timer 4416127232 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 41|Start timer 4416127328 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,317|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,317|DEBUG  |       timer.py| 41|Start timer 4416127520 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 55|Cancel timer 4416127232 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 55|Cancel timer 4416127328 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 55|Cancel timer 4416127520 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 67|Pop timer 4416127040 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,318|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,318|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 41|Start timer 4416127904 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py|100|Start of schedule: 1 (limit 272) pending messages, 7 (limit 28436) pending timers
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 41|Start timer 4416128096 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 41|Start timer 4416128192 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,318|DEBUG  |       timer.py| 41|Start timer 4416128384 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,318|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,318|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 55|Cancel timer 4416128096 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 55|Cancel timer 4416128192 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 55|Cancel timer 4416128384 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 67|Pop timer 4416127904 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,319|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,319|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 41|Start timer 4416128768 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py|100|Start of schedule: 1 (limit 265) pending messages, 7 (limit 28435) pending timers
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 41|Start timer 4416128960 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 41|Start timer 4416129056 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,319|DEBUG  |       timer.py| 41|Start timer 4416129248 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,319|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,319|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,319|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 55|Cancel timer 4416128960 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 55|Cancel timer 4416129056 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 55|Cancel timer 4416129248 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 67|Pop timer 4416128768 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,320|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,320|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 41|Start timer 4416129632 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py|100|Start of schedule: 1 (limit 258) pending messages, 7 (limit 28434) pending timers
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 41|Start timer 4416129824 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 41|Start timer 4416129920 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,320|DEBUG  |       timer.py| 41|Start timer 4416130112 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,320|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,320|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,320|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 55|Cancel timer 4416129824 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 55|Cancel timer 4416129920 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 55|Cancel timer 4416130112 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 67|Pop timer 4416129632 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,321|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,321|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 41|Start timer 4416130496 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py|100|Start of schedule: 1 (limit 251) pending messages, 7 (limit 28433) pending timers
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,321|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,321|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 41|Start timer 4416130736 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 41|Start timer 4416130832 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,321|DEBUG  |       timer.py| 41|Start timer 4416147568 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,321|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,321|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,321|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 55|Cancel timer 4416130736 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 55|Cancel timer 4416130832 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 55|Cancel timer 4416147568 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 67|Pop timer 4416130496 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,322|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,322|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 41|Start timer 4416147856 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py|100|Start of schedule: 1 (limit 243) pending messages, 7 (limit 28432) pending timers
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 41|Start timer 4416148048 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 41|Start timer 4416148144 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 41|Start timer 4416148336 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,322|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 55|Cancel timer 4416148048 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,322|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,322|DEBUG  |       timer.py| 55|Cancel timer 4416148144 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 55|Cancel timer 4416148336 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 67|Pop timer 4416147856 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,323|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,323|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 41|Start timer 4416148720 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py|100|Start of schedule: 1 (limit 236) pending messages, 7 (limit 28431) pending timers
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 41|Start timer 4416148912 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 41|Start timer 4416149008 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 41|Start timer 4416149200 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,323|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 55|Cancel timer 4416148912 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 55|Cancel timer 4416149008 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,323|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 55|Cancel timer 4416149200 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,323|DEBUG  |       timer.py| 67|Pop timer 4416148720 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,323|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,324|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 41|Start timer 4416149584 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py|100|Start of schedule: 1 (limit 229) pending messages, 7 (limit 28430) pending timers
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 41|Start timer 4416149776 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 41|Start timer 4416149872 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 41|Start timer 4416150064 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 55|Cancel timer 4416149776 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 55|Cancel timer 4416149872 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,324|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 55|Cancel timer 4416150064 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 67|Pop timer 4416149584 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,324|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,324|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,324|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,324|DEBUG  |       timer.py| 41|Start timer 4416150448 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py|100|Start of schedule: 1 (limit 222) pending messages, 7 (limit 28429) pending timers
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 41|Start timer 4416150640 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 41|Start timer 4416150736 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 41|Start timer 4416150928 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 55|Cancel timer 4416150640 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 55|Cancel timer 4416150736 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 55|Cancel timer 4416150928 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 67|Pop timer 4416150448 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,325|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,325|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 41|Start timer 4416151312 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py|100|Start of schedule: 1 (limit 215) pending messages, 7 (limit 28428) pending timers
2022-12-10 19:11:03,325|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,325|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,325|DEBUG  |       timer.py| 41|Start timer 4416151504 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 41|Start timer 4416168048 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 41|Start timer 4416168240 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 55|Cancel timer 4416151504 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 55|Cancel timer 4416168048 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 55|Cancel timer 4416168240 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 67|Pop timer 4416151312 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,326|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,326|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 41|Start timer 4416168624 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py|100|Start of schedule: 1 (limit 208) pending messages, 7 (limit 28427) pending timers
2022-12-10 19:11:03,326|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 41|Start timer 4416168816 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,326|DEBUG  |       timer.py| 41|Start timer 4416168912 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,326|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 41|Start timer 4416169104 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 55|Cancel timer 4416168816 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 55|Cancel timer 4416168912 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 55|Cancel timer 4416169104 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 67|Pop timer 4416168624 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,327|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,327|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 41|Start timer 4416169488 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py|100|Start of schedule: 1 (limit 201) pending messages, 7 (limit 28426) pending timers
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 41|Start timer 4416169680 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 41|Start timer 4416169776 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,327|DEBUG  |       timer.py| 41|Start timer 4416169968 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,327|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,327|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 55|Cancel timer 4416169680 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 55|Cancel timer 4416169776 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 55|Cancel timer 4416169968 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 67|Pop timer 4416169488 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,328|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,328|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 41|Start timer 4416170352 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py|100|Start of schedule: 1 (limit 194) pending messages, 7 (limit 28425) pending timers
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,328|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,328|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 41|Start timer 4416170592 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 41|Start timer 4416170688 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,328|DEBUG  |       timer.py| 41|Start timer 4416170880 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,328|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,328|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 55|Cancel timer 4416170592 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 55|Cancel timer 4416170688 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 55|Cancel timer 4416170880 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 67|Pop timer 4416170352 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,329|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,329|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 41|Start timer 4416171264 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py|100|Start of schedule: 1 (limit 186) pending messages, 7 (limit 28424) pending timers
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,329|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,329|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 41|Start timer 4416171504 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 41|Start timer 4416171600 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,329|DEBUG  |       timer.py| 41|Start timer 4416171792 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,329|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,329|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 55|Cancel timer 4416171504 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 55|Cancel timer 4416171600 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 55|Cancel timer 4416171792 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 67|Pop timer 4416171264 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,330|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,330|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 41|Start timer 4416180432 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py|100|Start of schedule: 1 (limit 178) pending messages, 7 (limit 28423) pending timers
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 41|Start timer 4416180624 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 41|Start timer 4416180720 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,330|DEBUG  |       timer.py| 41|Start timer 4416180912 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,330|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,330|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,330|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 55|Cancel timer 4416180624 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 55|Cancel timer 4416180720 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 55|Cancel timer 4416180912 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 67|Pop timer 4416180432 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,331|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,331|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 41|Start timer 4416181296 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py|100|Start of schedule: 1 (limit 171) pending messages, 7 (limit 28422) pending timers
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,331|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,331|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 41|Start timer 4416181536 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 41|Start timer 4416181632 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,331|DEBUG  |       timer.py| 41|Start timer 4416181824 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,331|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,331|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,331|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 55|Cancel timer 4416181536 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 55|Cancel timer 4416181632 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 55|Cancel timer 4416181824 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 67|Pop timer 4416181296 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,332|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,332|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 41|Start timer 4416182208 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py|100|Start of schedule: 1 (limit 163) pending messages, 7 (limit 28421) pending timers
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 41|Start timer 4416182400 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 41|Start timer 4416182496 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,332|DEBUG  |       timer.py| 41|Start timer 4416182688 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,332|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,332|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,332|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 55|Cancel timer 4416182400 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 55|Cancel timer 4416182496 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 55|Cancel timer 4416182688 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 67|Pop timer 4416182208 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,333|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,333|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 41|Start timer 4416183072 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py|100|Start of schedule: 1 (limit 156) pending messages, 7 (limit 28420) pending timers
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,333|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,333|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 41|Start timer 4416183312 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 41|Start timer 4416183408 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,333|DEBUG  |       timer.py| 41|Start timer 4416183600 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,333|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,333|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,333|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 55|Cancel timer 4416183312 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 55|Cancel timer 4416183408 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 55|Cancel timer 4416183600 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 67|Pop timer 4416183072 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,334|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,334|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 41|Start timer 4416183984 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py|100|Start of schedule: 1 (limit 148) pending messages, 7 (limit 28419) pending timers
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 41|Start timer 4416184176 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 41|Start timer 4416217200 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 41|Start timer 4416217296 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,334|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,334|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,334|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,334|DEBUG  |       timer.py| 55|Cancel timer 4416184176 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 55|Cancel timer 4416217200 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 55|Cancel timer 4416217296 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 67|Pop timer 4416183984 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,335|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,335|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 41|Start timer 4416217680 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py|100|Start of schedule: 1 (limit 141) pending messages, 7 (limit 28418) pending timers
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,335|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,335|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 41|Start timer 4416217920 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 41|Start timer 4416218016 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 41|Start timer 4416218208 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,335|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,335|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,335|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,335|DEBUG  |       timer.py| 55|Cancel timer 4416217920 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 55|Cancel timer 4416218016 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 55|Cancel timer 4416218208 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 67|Pop timer 4416217680 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,336|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,336|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 41|Start timer 4416218592 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py|100|Start of schedule: 1 (limit 133) pending messages, 7 (limit 28417) pending timers
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 41|Start timer 4416218784 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 41|Start timer 4416218880 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 41|Start timer 4416219072 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,336|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 55|Cancel timer 4416218784 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 55|Cancel timer 4416218880 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,336|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,336|DEBUG  |       timer.py| 55|Cancel timer 4416219072 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 67|Pop timer 4416218592 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,337|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,337|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 41|Start timer 4416219456 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py|100|Start of schedule: 1 (limit 126) pending messages, 7 (limit 28416) pending timers
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,337|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,337|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 41|Start timer 4416219696 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 41|Start timer 4416219792 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 41|Start timer 4416219984 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,337|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 55|Cancel timer 4416219696 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 55|Cancel timer 4416219792 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,337|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,337|DEBUG  |       timer.py| 55|Cancel timer 4416219984 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 67|Pop timer 4416219456 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,338|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,338|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 41|Start timer 4416220368 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py|100|Start of schedule: 1 (limit 118) pending messages, 7 (limit 28415) pending timers
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,338|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,338|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 41|Start timer 4416220608 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 41|Start timer 4416220704 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 41|Start timer 4416220896 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,338|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 55|Cancel timer 4416220608 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 55|Cancel timer 4416220704 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 55|Cancel timer 4416220896 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,338|DEBUG  |       timer.py| 67|Pop timer 4416220368 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,339|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,339|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 41|Start timer 4416233632 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py|100|Start of schedule: 1 (limit 110) pending messages, 7 (limit 28414) pending timers
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,339|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,339|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 41|Start timer 4416233872 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 41|Start timer 4416233968 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 41|Start timer 4416234160 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,339|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 55|Cancel timer 4416233872 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 55|Cancel timer 4416233968 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,339|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 55|Cancel timer 4416234160 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,339|DEBUG  |       timer.py| 67|Pop timer 4416233632 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,340|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,340|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 41|Start timer 4416234544 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py|100|Start of schedule: 1 (limit 102) pending messages, 7 (limit 28413) pending timers
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,340|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,340|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 41|Start timer 4416234784 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 41|Start timer 4416234880 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 41|Start timer 4416235072 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,340|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 55|Cancel timer 4416234784 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 55|Cancel timer 4416234880 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,340|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 55|Cancel timer 4416235072 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,340|DEBUG  |       timer.py| 67|Pop timer 4416234544 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,340|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,341|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 41|Start timer 4416235456 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py|100|Start of schedule: 1 (limit 94) pending messages, 7 (limit 28412) pending timers
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,341|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,341|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 41|Start timer 4416235696 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 41|Start timer 4416235792 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 41|Start timer 4416235984 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,341|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 55|Cancel timer 4416235696 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 55|Cancel timer 4416235792 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,341|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,341|DEBUG  |       timer.py| 55|Cancel timer 4416235984 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 67|Pop timer 4416235456 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,342|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,342|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 41|Start timer 4416236368 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py|100|Start of schedule: 1 (limit 86) pending messages, 7 (limit 28411) pending timers
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,342|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,342|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 41|Start timer 4416236608 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 41|Start timer 4416236704 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 41|Start timer 4416236896 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,342|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 55|Cancel timer 4416236608 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 55|Cancel timer 4416236704 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 55|Cancel timer 4416236896 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,342|DEBUG  |       timer.py| 67|Pop timer 4416236368 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,343|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,343|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 41|Start timer 4416237280 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py|100|Start of schedule: 1 (limit 78) pending messages, 7 (limit 28410) pending timers
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,343|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,343|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 41|Start timer 4416237520 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 41|Start timer 4416254064 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 41|Start timer 4416254256 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,343|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 55|Cancel timer 4416237520 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 55|Cancel timer 4416254064 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,343|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 55|Cancel timer 4416254256 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,343|DEBUG  |       timer.py| 67|Pop timer 4416237280 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,344|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,344|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 41|Start timer 4416254640 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py|100|Start of schedule: 1 (limit 70) pending messages, 7 (limit 28409) pending timers
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,344|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,344|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 41|Start timer 4416254880 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 41|Start timer 4416254976 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 41|Start timer 4416255168 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,344|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 55|Cancel timer 4416254880 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 55|Cancel timer 4416254976 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,344|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 55|Cancel timer 4416255168 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,344|DEBUG  |       timer.py| 67|Pop timer 4416254640 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,345|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,345|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 41|Start timer 4416255552 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py|100|Start of schedule: 1 (limit 62) pending messages, 7 (limit 28408) pending timers
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,345|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,345|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 41|Start timer 4416255792 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 41|Start timer 4416255888 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 41|Start timer 4416256080 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,345|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 55|Cancel timer 4416255792 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 55|Cancel timer 4416255888 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,345|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,345|DEBUG  |       timer.py| 55|Cancel timer 4416256080 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 67|Pop timer 4416255552 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,346|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,346|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 41|Start timer 4416256464 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py|100|Start of schedule: 1 (limit 54) pending messages, 7 (limit 28407) pending timers
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue a->A: ClientGet(K1=?)
2022-12-10 19:11:03,346|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,346|INFO   |   framework.py| 83|Enqueue(fwd) A->D: ClientGet(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 41|Start timer 4416256704 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 41|Start timer 4416256800 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 41|Start timer 4416256992 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,346|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 55|Cancel timer 4416256704 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 55|Cancel timer 4416256800 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,346|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,346|DEBUG  |       timer.py| 55|Cancel timer 4416256992 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 67|Pop timer 4416256464 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,347|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,347|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 41|Start timer 4416257376 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py|100|Start of schedule: 1 (limit 46) pending messages, 7 (limit 28406) pending timers
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 41|Start timer 4416257568 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 41|Start timer 4416257664 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 41|Start timer 4416257856 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,347|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 55|Cancel timer 4416257568 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 55|Cancel timer 4416257664 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,347|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 55|Cancel timer 4416257856 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,347|DEBUG  |       timer.py| 67|Pop timer 4416257376 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,347|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,347|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 41|Start timer 4416266496 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py|100|Start of schedule: 1 (limit 39) pending messages, 7 (limit 28405) pending timers
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue a->F: ClientGet(K1=?)
2022-12-10 19:11:03,348|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,348|INFO   |   framework.py| 83|Enqueue(fwd) F->D: ClientGet(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 41|Start timer 4416266736 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 41|Start timer 4416266832 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 41|Start timer 4416267024 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,348|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 55|Cancel timer 4416266736 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 55|Cancel timer 4416266832 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,348|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 55|Cancel timer 4416267024 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,348|DEBUG  |       timer.py| 67|Pop timer 4416266496 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,348|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,348|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 41|Start timer 4416267408 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py|100|Start of schedule: 1 (limit 31) pending messages, 7 (limit 28404) pending timers
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 41|Start timer 4416267600 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 41|Start timer 4416267696 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 41|Start timer 4416267888 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 55|Cancel timer 4416267600 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 55|Cancel timer 4416267696 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,349|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 55|Cancel timer 4416267888 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 67|Pop timer 4416267408 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,349|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,349|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,349|INFO   |   framework.py| 42|Enqueue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,349|DEBUG  |       timer.py| 41|Start timer 4416268272 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py|100|Start of schedule: 1 (limit 24) pending messages, 7 (limit 28403) pending timers
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue a->B: ClientGet(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue B->D: GetReq(K1=?)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 41|Start timer 4416268464 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue B->B: GetReq(K1=?)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 41|Start timer 4416268560 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue B->C: GetReq(K1=?)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 41|Start timer 4416268752 prio 20 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue B->D: GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue B->B: GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue B->C: GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue D->B: GetRsp(K1=1)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 55|Cancel timer 4416268464 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue B->B: GetRsp(K1=1)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 55|Cancel timer 4416268560 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue C->B: GetRsp(K1=1)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 55|Cancel timer 4416268752 for node B reason GetReq(K1=?)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 67|Pop timer 4416268272 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,350|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,350|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 41|Start timer 4416269136 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py|100|Start of schedule: 1 (limit 17) pending messages, 7 (limit 28402) pending timers
2022-12-10 19:11:03,350|INFO   |   framework.py|112|Dequeue a->C: ClientGet(K1=?)
2022-12-10 19:11:03,350|INFO   |   framework.py| 42|Enqueue C->D: GetReq(K1=?)
2022-12-10 19:11:03,350|DEBUG  |       timer.py| 41|Start timer 4416269328 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue C->B: GetReq(K1=?)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 41|Start timer 4416269424 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue C->C: GetReq(K1=?)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 41|Start timer 4416269616 prio 20 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue C->D: GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue C->B: GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue C->C: GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue D->C: GetRsp(K1=1)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 55|Cancel timer 4416269328 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue B->C: GetRsp(K1=1)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 55|Cancel timer 4416269424 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue C->C: GetRsp(K1=1)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 55|Cancel timer 4416269616 for node C reason GetReq(K1=?)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 67|Pop timer 4416269136 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,351|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,351|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 41|Start timer 4416270000 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py|100|Start of schedule: 1 (limit 10) pending messages, 7 (limit 28401) pending timers
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,351|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,351|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,351|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,351|DEBUG  |       timer.py| 41|Start timer 4416270240 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 41|Start timer 4416294976 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 41|Start timer 4416295168 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue D->D: GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |      dynamo.py|220|D: retrieve K1=?
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue D->B: GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |      dynamo.py|220|B: retrieve K1=?
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue D->C: GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |      dynamo.py|220|C: retrieve K1=?
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue D->D: GetRsp(K1=1)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 55|Cancel timer 4416270240 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue B->D: GetRsp(K1=1)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 55|Cancel timer 4416294976 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue C->D: GetRsp(K1=1)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 55|Cancel timer 4416295168 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 67|Pop timer 4416270000 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,352|DEBUG  |   framework.py| 77|Call on to rsp_timer_pop() for node a
2022-12-10 19:11:03,352|INFO   |      dynamo.py|314|Get request timed out; retrying
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 41|Start timer 4416295552 prio 17 for node a reason ClientGet(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py|100|Start of schedule: 1 (limit 2) pending messages, 7 (limit 28400) pending timers
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue a->E: ClientGet(K1=?)
2022-12-10 19:11:03,352|INFO   |      dynamo.py|168|get(K1=?) maps to [<dynamo.DynamoNode object at 0x104cd7280>, <dynamo.DynamoNode object at 0x102db3880>, <dynamo.DynamoNode object at 0x104aac880>]
2022-12-10 19:11:03,352|INFO   |   framework.py| 83|Enqueue(fwd) E->D: ClientGet(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py|112|Dequeue a->D: ClientGet(K1=?)
2022-12-10 19:11:03,352|INFO   |   framework.py| 42|Enqueue D->D: GetReq(K1=?)
2022-12-10 19:11:03,352|DEBUG  |       timer.py| 41|Start timer 4416295792 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,353|INFO   |   framework.py| 42|Enqueue D->B: GetReq(K1=?)
2022-12-10 19:11:03,353|DEBUG  |       timer.py| 41|Start timer 4416295888 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:03,353|INFO   |   framework.py| 42|Enqueue D->C: GetReq(K1=?)
2022-12-10 19:11:03,353|DEBUG  |       timer.py| 41|Start timer 4416296080 prio 20 for node D reason GetReq(K1=?)
2022-12-10 19:11:05,076|INFO   | test_dynamo.py| 36|Reset after last test
